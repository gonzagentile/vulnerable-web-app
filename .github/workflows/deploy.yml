name: SAST, DAST, Build and Deploy Vulnerable Application                                  # workflow name

on:
  push:
    branches:
      - master
      
jobs:

  gitleaks:
    name: Scan secrets GitLeaks
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Run GitLeaks
        uses: gitleaks/gitleaks-action@v2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: gitleaks
          path: gitleaks.json 
            
  secrets:
    name: Scan Secret HORUSEC
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
    - name: Install Horusec
      continue-on-error: true
      run: |
        curl -fsSL https://raw.githubusercontent.com/ZupIT/horusec/master/deployments/scripts/install.sh | bash -s latest
        horusec start -p="./" -e="true" -o="json" -O="./horusec.json" 
    - uses: actions/upload-artifact@v3
      with:
        name: horusec
        path: horusec.json
    - name: tanasec 
      env:
        ALLOW_FAILURE: true
        TOOLS: horusec
        FILE: horusec.json
        CRITICAL: 5
      run: docker run --rm -i -v $(pwd)/horusec.json:/app/horusec.json:z -e FILE=$FILE -e TOOLS=$TOOLS -e ALLOW_FAILURE=$ALLOW_FAILURE -e CRITICAL=$CRITICAL roxsross12/tanasec:1.0.0  
      
  linter:
    name: linter dockerfile
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
    - name: Install hadolint
      continue-on-error: true
      run: docker run --rm -i hadolint/hadolint < Dockerfile

  trivy:
    name: Scan image Trivy
    runs-on: ubuntu-latest
    permissions:
      # required for all workflows
      security-events: write
      actions: read
      contents: read
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Build an image from Dockerfile
        run: |
          docker build -t trivy-image:${{ github.sha }} .
#security github
      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: 'trivy-image:${{ github.sha }}'
          format: 'html'
          output: 'trivy-results.html'

      - name: Upload Trivy scan results to GitHub Security tab
        uses: github/codeql-action/upload-sarif@v2
        with:
          sarif_file: 'trivy-results.html'
      
      #- name: Run Trivy vulnerability scanner
      #  uses: aquasecurity/trivy-action@master
      #  continue-on-error: true
      #  with:
      #    image-ref: 'trivy-image:${{ github.sha }}'
      #    format: 'json'
      #    output: 'trivy-results.json'
      #    severity: 'HIGH'
      #    exit-code: '1'
      #- uses: actions/upload-artifact@v3
      #  with:
      #    name: trivy
      #    path: trivy-results.json
          

#  deploy-heroku:
#    name: Deploy Heroku
#    runs-on: ubuntu-latest
#    steps:
#      - uses: actions/checkout@v2
#      - uses: akhileshns/heroku-deploy@v3.12.12 # This is the action
#        with:
#          heroku_api_key: ${{secrets.HEROKU_API_KEY}}
#          heroku_app_name: "gentile-gonzalo" #Must be unique in Heroku
#          heroku_email: "gonza.gentile@gmail.com"
#          branch: "master"
#          usedocker: true
