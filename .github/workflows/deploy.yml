name: SAST, DAST, Build and Deploy Vulnerable Application                                  # workflow name

on:
  push:
    branches:
      - master
      
jobs:

  gitleaks:
    name: Scan secrets GitLeaks
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Run GitLeaks
        uses: gitleaks/gitleaks-action@v2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: gitleaks
          path: gitleaks.json 
            
  secrets:
    name: Scan Secret HORUSEC
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
    - name: Install Horusec
      continue-on-error: true
      run: |
        curl -fsSL https://raw.githubusercontent.com/ZupIT/horusec/master/deployments/scripts/install.sh | bash -s latest
        horusec start -p="./" -e="true" -o="json" -O="./horusec.json" 
    - uses: actions/upload-artifact@v3
      with:
        name: horusec
        path: horusec.json  
      
  linter:
    name: linter dockerfile
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
    - name: Install hadolint
      continue-on-error: true
      run: docker run --rm -i hadolint/hadolint < Dockerfile
    - name: Upload artifact
      uses: actions/upload-artifact@v3
      with:
        name: hadolint
        path: hadolint.json  
   
  synk:
    name: Snyk
    runs-on: ubuntu-latest
    steps:
        - uses: actions/checkout@v3
        - name: Run Snyk to check for vulnerabilities
          uses: snyk/actions/node@master
          env:
            SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        - name: Upload Snyk scan results to GitHub Security tab
          uses: actions/upload-artifact@v3
          with:
            name: synk
            path: snyk-results.json

  trivy:
    name: Scan image Trivy
    runs-on: ubuntu-latest
    permissions:
      # required for all workflows
      security-events: write
      actions: read
      contents: read
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Build an image from Dockerfile
        run: |
          docker build -t trivy-image:${{ github.sha }} .
#security github
      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: 'trivy-image:${{ github.sha }}'
          format: 'json'
          output: 'trivy-results.json'
      - name: Upload Trivy scan results to GitHub Security tab
        uses: actions/upload-artifact@v3
        with:
          name: trivy
          path: trivy-results.json
          
      

    #  - name: Upload Trivy scan results to GitHub Security tab
    #   uses: github/codeql-action/upload-sarif@v2
    #    with:
    #      sarif_file: 'trivy-results.html'
      
      #- name: Run Trivy vulnerability scanner
      #  uses: aquasecurity/trivy-action@master
      #  continue-on-error: true
      #  with:
      #    image-ref: 'trivy-image:${{ github.sha }}'
      #    format: 'json'
      #    output: 'trivy-results.json'
      #    severity: 'HIGH'
      #    exit-code: '1'
      #- uses: actions/upload-artifact@v3
      #  with:
      #    name: trivy
      #    path: trivy-results.json
          
#  deploy-heroku:
#    name: Deploy Heroku
#    runs-on: ubuntu-latest
#    steps:
#      - uses: actions/checkout@v2
#      - uses: akhileshns/heroku-deploy@v3.12.12 # This is the action
#        with:
#          heroku_api_key: ${{secrets.HEROKU_API_KEY}}
#          heroku_app_name: "gentile-gonzalo" #Must be unique in Heroku
#          heroku_email: "gonza.gentile@gmail.com"
#          branch: "master"
#          usedocker: true

#  zap_scan:
#      runs-on: ubuntu-latest
#      needs: deploy-heroku
#      name: Run DAST scan on the web application
#      permissions:
      # required for all workflows
#        security-events: write
#        actions: read
#        contents: read
#      steps:
#        - name: Checkout
#          uses: actions/checkout@v2
#          with:
#            ref: master
#        - name: ZAP Scan
#          uses: zaproxy/action-baseline@v0.6.1
#          with:
#            docker_name: 'owasp/zap2docker-stable'
#            target: 'https://gentile-gonzalo-8a21783a08a4.herokuapp.com/'
#            rules_file_name: '.zap/rules.tsv'
#            cmd_options: '-a'
#        - uses: actions/upload-artifact@v3
#          with:
#            name: owasp-report
#            path: testreport.* 
            
  owasp:
    name: Scan dast owasp
    runs-on: ubuntu-latest
    needs: deploy-heroku
    steps:
    - uses: actions/checkout@v3
    - name: Run Api Scan 
      run: |
        docker run --rm -v $(pwd):/zap/wrk/:rw --user root -t owasp/zap2docker-weekly zap-full-scan.py -t https://gentile-gonzalo-8a21783a08a4.herokuapp.com/ -d -I -x testreport.xml -r testreport.html
    - uses: actions/upload-artifact@v3
      with:
        name: owasp
        path: testreport.*          
      
